#!/usr/bin/env python3
"""
Translate vimvixen keymaps.

Print original config with translated keymaps added.
"""
import json
import re
from pathlib import Path

INPUT_CONFIG_FILE = f'{Path.home()}/.dotfiles/vimvixen-config.json'
KEYS_EN = "qwertyuiop[]asdfghjkl;'zxcvbnm,.QWERTYUIOP{}ASDFGHJKL:ZXCVBNM<>"
KEYS_RU = "йцукенгшщзхъфывапролджэячсмитьбюЙЦУКЕНГШЩЗХЪФЫВАПРОЛДЖЯЧСМИТЬБЮ"
KEYS_UA = "йцукенгшщзхїфівапролджєячсмитьбюЙЦУКЕНГШЩЗХЇФІВАПРОЛДЖЯЧСМИТЬБЮ"
CONTROL_KEYMAP_REGEX = re.compile(r'^<C-(.*)>$')
SHIFT_KEYMAP_REGEX = re.compile(r'^<S-(.*)>$')


def main():
    with open(INPUT_CONFIG_FILE) as fin:
        input_json = json.loads(fin.read())

    ru_table = str.maketrans(KEYS_EN, KEYS_RU)
    ua_table = str.maketrans(KEYS_EN, KEYS_UA)

    keymaps_orig = input_json['keymaps']
    keymaps_new = {}
    for km in keymaps_orig:
        if match := CONTROL_KEYMAP_REGEX.match(km):
            # '<C-x>'
            if len(match.group(1)) == 1:
                km_ru = f'<C-{match.group(1).translate(ru_table)}>'
                km_ua = f'<C-{match.group(1).translate(ua_table)}>'
        elif match := SHIFT_KEYMAP_REGEX.match(km):
            # '<S-x>'
            if len(match.group(1)) == 1:
                km_ru = f'<S-{match.group(1).translate(ru_table)}>'
                km_ua = f'<S-{match.group(1).translate(ua_table)}>'
        else:
            # 'x', 'gx'
            km_ru = km.translate(ru_table)
            km_ua = km.translate(ua_table)

        keymaps_new[km_ru] = keymaps_orig[km]
        keymaps_new[km_ua] = keymaps_orig[km]

    keymaps_new.update(keymaps_orig)
    input_json['keymaps'] = keymaps_new
    print(json.dumps(input_json, indent=4))


if __name__ == '__main__':
    main()
