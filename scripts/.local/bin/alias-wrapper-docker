#!/bin/sh
# Aliases for docker.
CHOOSE_SHELL='if [ -f /bin/bash ]; then bash -l; else sh -l; fi'
FZF_DEFAULT_OPTS="--reverse --height 40% $FZF_DEFAULT_OPTS"


get_container_name() {
    'docker' ps --format 'table{{.Names}}\t{{.Image}}\t{{.Status}}' |
        fzf --header-lines=1 | awk '{ print $1 }'
}


key="$1"
case "$key" in
    bd)
        cmd='build';;
    ex)
        choice="${2:-$(get_container_name)}"
        [ -z "$choice" ] && exit 1
        'docker' exec -it "$choice" sh -c "$CHOOSE_SHELL"
        exit;;
    im)
        cmd='images';;
    imh)
        'docker' images | head
        exit;;
    killall)
        cmd="kill $('docker' ps -q)";;
    k)
        cmd="kill";;
    krm)
        # The xargs arguments make sure that kill/rm won't
        # be executed if there is no input.
        'docker' ps -q | xargs -P8 -I {} docker kill {}
        'docker' ps -aq | xargs -P8 -I {} docker rm {}
        exit;;
    lg)
        cmd="logs";;
    lgf)
        cmd='logs -f';;
    lgft)
        # --tail="all" is default
        cmd='logs -f --tail=0';;
    pl)
        cmd='pull';;
    ps)
        cmd='ps --format table{{.ID}}\t{{.Image}}\t{{.Names}}\t{{.Status}}';;
    psa)
        cmd='ps -a --format table{{.ID}}\t{{.Image}}\t{{.Names}}\t{{.Status}}';;
    psf)
        cmd='ps';;
    psfa)
        cmd='ps -a';;
    rs)
        cmd='restart';;
    rsl)
        [ "$#" -lt 2 ] && echo 'Specify container name.' && exit 1
        'docker' restart "$2" && 'docker' logs -f "$2"
        exit;;
    rn|run)
        cmd='run --rm';;
    rnt)
        shift
        'docker' run --rm -it "$@" sh -c "$CHOOSE_SHELL"
        exit;;
    sys)
        cmd='system';;
    rmall)
        cmd="rm $('docker' ps -aq)";;
    v)
        cmd='version';;
    *)
        cmd="$key";;
esac
[ -n "$cmd" ] && shift

# shellcheck disable=SC2086
'docker' $cmd "$@"
