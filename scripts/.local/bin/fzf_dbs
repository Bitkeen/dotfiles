#!/bin/sh
# Connect to a database from a file with connection strings, using
# either pgcli or mycli.
# Each line should consist of a connection alias and a corresponding
# connection string, separated with "=".
#
# Dependencies:
# - fzf
# - mycli
# - pgcli
#
# Usage example:
# fzf_dbs ~/.config/db_connections
# Add 'mariadb' as initial part of the query:
# fzf_dbs ~/.config/db_connections mariadb


conn_file="$1"
[ -z "$conn_file" ] && echo "Connections file wasn't specified." && exit 1
[ ! -f "$conn_file" ] && echo "Connections file doesn't exist." && exit 1
initial_query="$2"

FZF_DEFAULT_OPTS="--query=$initial_query --reverse --height 40% $FZF_DEFAULT_OPTS"

# Delete the comments and empty lines first.
choice="$(sed -e "/^#/d" -e "s/ \?\#.*//" -e "/^\s*$/d" "$conn_file" \
          | fzf)"

[ -z "$choice" ] && exit 1

# If running in tmux, save the previous window name.
[ -z "$TMUX" ] || current_window_name="$(tmux display-message -p '#W')"

choice_name="$(echo "$choice" | awk -F '=' '{print $1}')"
choice_connection="$(echo "$choice" | awk -F '=' '{$1=""; print substr($0, 2)}')"

if echo "$choice_connection" | grep '^postgresql' > /dev/null; then
    ! [ -x "$(command -v pgcli)" ] && echo 'Could not find pgcli.' && exit 1
    pgcli_prompt="$choice_name \u@\H/\d \n > "
    [ -z "$TMUX" ] || tmux rename-window 'pgcli'
    pgcli --prompt "$pgcli_prompt" "$choice_connection"

elif echo "$choice_connection" | grep '^mysql' > /dev/null; then
    ! [ -x "$(command -v mycli)" ] && echo 'Could not find mycli.' && exit 1
    mycli_prompt="$choice_name \t \u@\h:\d \n > "
    [ -z "$TMUX" ] || tmux rename-window 'mycli'
    mycli --prompt "$mycli_prompt" "$choice_connection"

else
    echo 'Wrong connection string format.' && exit 1

fi

[ -z "$current_window_name" ] || tmux rename-window "$current_window_name"
