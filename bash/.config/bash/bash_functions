#!/usr/bin/env bash
u() {
    # Go up $1 directories.
    # If $1 is omitted or is not an integer, go up 1 directory.
    dir=''
    if echo "$1" | grep -Eq '^[0-9]+$'; then
        for i in $(seq "$1")
        do
            dir="$dir../"
        done
    else
        dir='..'
    fi
    cd "$dir"
}

ww() {
    # Open index file of the $1 wiki (the first one if $1 is omitted).
    vim -c "execute \"normal $1\<Plug>VimwikiIndex\""
}

fzg() {
    # Open a directory from special files containing a list of shortcuts.
    cd "$(fzf_shortcuts ~/.config/shortcuts ~/.config/shortcuts.local)" ||
        return 1
}

fzd() {
    fzf_dbs ~/.config/db_connections.local
}

fzc() {
    fzf_containers
}

ranger-cd() {
    # Automatically change the directory in bash after closing ranger.
    # Source:
    # https://github.com/ranger/ranger/blob/master/examples/bash_automatic_cd.sh
    # The same script can be found locally:
    # /usr/share/doc/ranger/examples/bash_automatic_cd.sh
    #
    # This is a function for automatically changing the directory to
    # the last visited one after ranger quits.
    # To undo the effect of this function, you can type "cd -" to return to the
    # original directory.
    tempfile="$(mktemp -t tmp.XXXXXX)"
    ranger --choosedir="$tempfile" "${@:-$(pwd)}"
    test -f "$tempfile" &&
    if [ "$(cat -- "$tempfile")" != "$(echo -n `pwd`)" ]; then
        cd -- "$(cat "$tempfile")"
    fi
    rm -f -- "$tempfile"
}

wrap_ranger() {
    # Temporary workaround for tmux renaming problem.
    [ -z "$TMUX" ] || current_window_name="$(tmux display-message -p '#W')"
    # The ranger-cd version switches the directory in bash on exit,
    # ranger-shell.sh allows to expand shell aliases inside the :shell
    # command.
    SHELL=~/.local/bin/ranger-shell.sh ranger-cd
    [ -z "$current_window_name" ] || tmux rename-window "$current_window_name"
}

rmnt() {
    # Go to a mounted partition's directory.
    ranger-cd "$(fzf_mounted)"
}

cmnt() {
    cd "$(fzf_mounted)"
}
