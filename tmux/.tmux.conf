# Main {{{

# Source tmuxline snapshot if it exists.
if-shell "test -f ~/.tmux/tmuxline" "source ~/.tmux/tmuxline"

# Remove delay when hitting Esc in vim.
set -s escape-time 0

# Enable 256-color support.
set -g default-terminal "tmux-256color"

# Enable mouse mode.
set -g mouse on

# Index windows and panes from 1, not 0.
set -g base-index 1
setw -g pane-base-index 1

# Set scrollback buffer size. Default is 2000.
set -g history-limit 100000

set-window-option -g mode-keys vi

# Set emacs key bindings for command prompt and search.
# This is similar to how Vim behaves in command mode.
set -g status-keys emacs

set -g set-titles on
set -g set-titles-string "#S"

# Renumber sessions.
set-hook -g session-created "run ~/.local/bin/renumber-sessions.sh"
set-hook -g session-closed  "run ~/.local/bin/renumber-sessions.sh"

# Expand the default list (" -_@") of word separators.
# The second space is an nbsp.
set-option -g word-separators "  -@#:=<>/[]{}()?,.~''\\\"\""

set -g focus-events on

# }}}

# Bindings {{{

# Remap prefix from 'C-b' to 'C-space'
unbind-key C-b
set-option -g prefix C-space
bind-key C-space send-prefix

# Reload config file.
bind-key R source-file ~/.tmux.conf; display-message "Config reloaded."

# Rebind prefix-c to keep the current directory in new windows.
unbind-key c
bind-key c new-window -c "#{pane_current_path}"

# Default for prefix+o is "select-pane -t :.+",
# which selects the next pane.
unbind-key o
bind-key o new-window 'ranger'

# Split a pane.
# Open new panes with the path of current pane.
bind-key \ split-window -h -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"
# Split a full window.
bind-key | split-window -fh -c "#{pane_current_path}"
bind-key _ split-window -fv -c "#{pane_current_path}"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator.
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -T root C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -T root C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -T root C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -T root C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -T root C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# Default for begin-selection.
unbind-key -T copy-mode-vi Space
# Default for rectangle-toggle.
unbind-key -T copy-mode-vi v
# Default for copy-selection-and-cancel.
unbind-key -T copy-mode-vi MouseDragEnd1Pane

bind-key -T copy-mode-vi v send-keys -X begin-selection
# Visual Block mode.
bind-key -T copy-mode-vi C-v send-keys -X begin-selection\; send-keys -X rectangle-toggle

XCLIP_COPY_COMMAND="xclip -i -f -selection primary | xclip -i -selection clipboard"
# Copy to system clipboard using xclip.
bind-key -T copy-mode-vi y send-keys -X copy-pipe $XCLIP_COPY_COMMAND\; send-keys -X clear-selection
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe $XCLIP_COPY_COMMAND\; send-keys -X clear-selection
# Copy to the end of the line.
bind-key -T copy-mode-vi Y send-keys -X begin-selection\; send-keys -X end-of-line\; send-keys -X copy-pipe $XCLIP_COPY_COMMAND\; send-keys -X clear-selection
# Copy selection and exit copy mode.
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel $XCLIP_COPY_COMMAND

# Resizing (mouse also works).
unbind-key Left
bind-key -r Left resize-pane -L 5
unbind-key Right
bind-key -r Right resize-pane -R 5
unbind-key Down
bind-key -r Down resize-pane -D 5
unbind-key Up
bind-key -r Up resize-pane -U 5

# Clear history.
bind-key -T root C-q clear-history

# Faster binding for upward search.
bind-key / copy-mode\; send-key ?

# Save current pane history to a file.
bind-key S command-prompt -p 'Save history to file:' -I '~/tmux-history-%Y-%m-%d_%H-%M-%S.log' 'capture-pane -S - ; save-buffer %1 ; delete-buffer'

# The space character in the quotes is actually an nbsp.
# It is added to the PS1 so that it's easy to search for the previous
# command (see .bashrc).
bind-key b copy-mode\; send-keys -X start-of-line\; send-keys -X search-backward " "

unbind-key -T root Tab

# Disable window switching by scrolling the statusbar with the mouse
# wheel.
unbind-key -T root WheelUpStatus
unbind-key -T root WheelDownStatus

# Since windows are indexed from 1 now.
bind-key 0 select-window -t :=10

# }}}

# Plugins {{{

set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @prefix_highlight_prefix_prompt 'Prefix'
set -g @prefix_highlight_show_copy_mode 'on'

set -g @plugin 'tmux-plugins/tmux-open'
set -g @open-S 'https://www.duckduckgo.com/'
set -g @open 'O'

set -g @plugin 'tmux-plugins/tmux-resurrect'
# Restore vim sessions.
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-processes 'ncmpcpp'

set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-save-interval '5'
set -g @continuum-restore 'on'
# Automatically start tmux when computer is turned on.
# See https://github.com/tmux-plugins/tmux-continuum/blob/master/docs/systemd_details.md
# for details.
set -g @continuum-boot 'on'

# Extract URLs to open in browser, fzf is required.
set -g @plugin 'wfxr/tmux-fzf-url'

# Extract paths and open selected in $EDITOR
set -g @plugin 'bitkeen/tmux-path-extractor'

# Initialize Tmux Plugin Manager (keep this line at the very bottom of tmux.conf).
run -b '~/.tmux/plugins/tpm/tpm'

# }}}
